     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 31333537                    s1 db "1357"
    14                                      len1 equ $-s1
    15 00000004 32363934                    s2 db "2694"
    16                                      len equ $-s1
    17 00000008 00<rept>                    d times len db 0
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22 00000000 B904000000                      mov ecx, len1
    23                                          
    24 00000005 BE00000000                      mov esi, 0
    25 0000000A BF00000000                      mov edi, 0
    26                                          
    27 0000000F E31D                            jecxz final
    28                                          repeta:
    29 00000011 8A86[00000000]                      mov al, [s1+esi]
    30 00000017 8887[08000000]                      mov [d+edi], al
    31 0000001D 47                                  inc edi
    32                                              
    33 0000001E 8A86[04000000]                      mov al, [s2+esi]
    34 00000024 8887[08000000]                      mov [d+edi], al
    35                                              
    36 0000002A 46                                  inc esi
    37 0000002B 47                                  inc edi
    38 0000002C E2E3                            loop repeta
    39                                          
    40                                          final:
    41                                          ; exit(0)
    42 0000002E 6A00                                push    dword 0      ; push the parameter for exit onto the stack
    43 00000030 FF15[00000000]                      call    [exit]       ; call exit to terminate the program
