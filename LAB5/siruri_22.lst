     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 313336323337                s1 db "136237"
    14                                      len equ $-s1
    15 00000006 363338313235                s2 db "638125"
    16 0000000C 00<rept>                    d times len db 0
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 B906000000                      mov ecx, len
    22                                          
    23 00000005 BE00000000                      mov esi, 0
    24                                          
    25 0000000A E325                            jecxz final
    26                                          repeta:
    27 0000000C 8A86[06000000]                      mov al, byte[s2+esi]
    28 00000012 3886[00000000]                      cmp [s1+esi], al
    29                                              
    30 00000018 7208                                JB primul_mai_mic
    31                                        
    32 0000001A 8886[0C000000]                      mov [d+esi], al
    33 00000020 EB0C                                jmp primul_mai_mare
    34                                              
    35                                              primul_mai_mic:
    36 00000022 8A86[00000000]                          mov al, [s1+esi]
    37 00000028 8886[0C000000]                          mov [d+esi], al
    38                                                  
    39                                              primul_mai_mare:
    40                                                  
    41 0000002E 46                                      inc esi
    42 0000002F E2DB                            loop repeta
    43                                          
    44                                          final:
    45                                          ; exit(0)
    46 00000031 6A00                                push    dword 0      ; push the parameter for exit onto the stack
    47 00000033 FF15[00000000]                      call    [exit]       ; call exit to terminate the program
