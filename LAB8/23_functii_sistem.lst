     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll 
     9                                  import scanf msvcrt.dll    
    10                                  import printf msvcrt.dll    
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 257800                      format_citire db "%x", 0
    15 00000003 256400                      format_scriere_cu_semn db "%d", 0
    16 00000006 25750A00                    format_scriere_fara_semn db "%u", 10, 0
    17 0000000A 00000000                    rez dd 0
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          
    23 00000000 68[0A000000]                    push dword rez
    24 00000005 68[00000000]                    push dword format_citire
    25 0000000A FF15[00000000]                  call [scanf]
    26 00000010 83C408                          add esp, 4*2
    27                                          
    28 00000013 FF35[0A000000]                  push dword [rez]
    29 00000019 68[06000000]                    push dword format_scriere_fara_semn
    30 0000001E FF15[00000000]                  call [printf]
    31 00000024 83C408                          add esp, 4*2
    32                                      
    33 00000027 A0[0A000000]                    mov al, [rez]
    34 0000002C 6698                            cbw 
    35 0000002E 6699                            cwd
    36 00000030 6652                            push word dx
    37 00000032 6650                            push word ax
    38 00000034 58                              pop eax
    39 00000035 A3[0A000000]                    mov [rez], eax
    40 0000003A FF35[0A000000]                  push dword [rez]
    41 00000040 68[03000000]                    push dword format_scriere_cu_semn
    42 00000045 FF15[00000000]                  call [printf]
    43 0000004B 83C408                          add esp, 4*2
    44                                          
    45                                      
    46                                          ; exit(0)
    47 0000004E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 00000050 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
