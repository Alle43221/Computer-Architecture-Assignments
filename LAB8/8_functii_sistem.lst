     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll 
     9                                  import scanf msvcrt.dll    
    10                                  import printf msvcrt.dll    
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 0A000000                    a dd 010
    15 00000004 00000000                    b dd 0
    16 00000008 257500                      format_citire db "%u", 0
    17 0000000B 00000000                    rez dd 0
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          
    23 00000000 68[04000000]                    push dword b
    24 00000005 68[08000000]                    push dword format_citire
    25 0000000A FF15[00000000]                  call [scanf]
    26 00000010 83C408                          add esp, 4*2
    27                                      
    28 00000013 BA00000000                      mov edx, 0
    29 00000018 A1[00000000]                    mov eax, [a]
    30 0000001D F735[04000000]                  div dword[b]
    31                                          
    32 00000023 0305[00000000]                  add eax, [a]
    33 00000029 A3[0B000000]                    mov [rez], eax
    34 0000002E FF35[0B000000]                  push dword [rez]
    35 00000034 68[08000000]                    push dword format_citire
    36 00000039 FF15[00000000]                  call [printf]
    37 0000003F 83C408                          add esp, 4*2
    38                                          
    39                                          
    40                                          ; pt b=10 avem 3149642683
    41                                      
    42                                          ; exit(0)
    43 00000042 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 00000044 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
