     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0600                        a DW 6
    15 00000002 0200                        b DW 2
    16 00000004 1100                        c DW 17
    17 00000006 0400                        d DW 4
    18                                      
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 66A1[00000000]                  MOV AX, [a]
    25 00000006 660105[06000000]                ADD [d], AX ; d=d+a  4+6=10
    26                                          
    27 0000000D 66A1[04000000]                  MOV AX, [c]
    28 00000013 660305[02000000]                ADD AX, [b] ; AX=c+b 17+2=19
    29                                          
    30 0000001A 660305[06000000]                ADD AX, [d] ; AX=(d+a)+(c+b)     19+10=29
    31 00000021 660305[04000000]                ADD AX, [c] ; AX=(d+a)+(c+b)+c   29+17=46
    32                                      
    33                                          ; exit(0)
    34 00000028 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 0000002A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
