     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fread, fclose, fopen, printf              
     8                                  import exit msvcrt.dll    
     9                                  import fread msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import printf msvcrt.dll
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 72312E74787400              denumire_fisier db "r1.txt", 0
    17 00000007 00000000                    descriptor_fisier dd 0
    18 0000000B 7200                        mod_acces db "r", 0
    19 0000000D 00<rept>                    text times 100 db 0
    20 00000071 257300                      format_afisare db "%s", 0
    21                                  
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25 00000000 68[0B000000]                    push dword mod_acces
    26 00000005 68[00000000]                    push dword denumire_fisier
    27 0000000A FF15[00000000]                  call [fopen]
    28 00000010 83C408                          add esp, 4*2
    29                                          
    30 00000013 A3[07000000]                    mov [descriptor_fisier], eax
    31                                          
    32                                          bucla:
    33 00000018 FF35[07000000]                      push dword[descriptor_fisier]
    34 0000001E 6A64                                push dword 100
    35 00000020 6A01                                push dword 1
    36 00000022 68[0D000000]                        push dword text
    37 00000027 FF15[00000000]                      call [fread]
    38 0000002D 83C410                              add esp, 4*4
    39                                              
    40 00000030 83F800                              cmp eax, 0
    41 00000033 7449                                je final
    42                                              
    43 00000035 89C1                                mov ecx, eax
    44 00000037 BE[0D000000]                        mov esi, text
    45 0000003C FC                                  cld
    46                                              repeta:
    47 0000003D AC                                      lodsb
    48 0000003E 3C41                                    cmp al, 41h ; A
    49 00000040 7222                                    jb final1
    50 00000042 3C7A                                    cmp al, 7ah ; z
    51 00000044 771E                                    ja final1
    52 00000046 3C61                                    cmp al, 61h ; a
    53 00000048 7306                                    jae mai_jos
    54 0000004A 3C5A                                    cmp al, 5Ah ; Z
    55 0000004C 7602                                    jbe mai_jos
    56                                                  
    57 0000004E EB14                                    jmp final1
    58                                                  
    59                                                  mai_jos:
    60 00000050 2C02                                    sub al, 2
    61 00000052 3C41                                    cmp al, 'A'
    62 00000054 7304                                    jae mai_jos_1
    63 00000056 041A                                    add al, 26
    64 00000058 EB0A                                    jmp final1
    65                                                  
    66                                                  mai_jos_1:
    67 0000005A 3C61                                    cmp al, 'a'
    68 0000005C 7306                                    jae final1
    69 0000005E 3C5A                                    cmp al, 'Z'
    70 00000060 7602                                    jbe final1
    71 00000062 041A                                    add al, 26
    72                                                  
    73                                                  final1:
    74 00000064 8846FF                                  mov [esi-1], al
    75 00000067 E2D4                                loop repeta
    76                                              
    77 00000069 68[0D000000]                        push dword text
    78 0000006E 68[71000000]                        push dword format_afisare
    79 00000073 FF15[00000000]                      call [printf]
    80 00000079 83C408                              add esp, 4*2
    81                                          
    82 0000007C EB9A                            jmp bucla
    83                                          
    84                                          final:
    85 0000007E FF35[07000000]                  push dword [descriptor_fisier]
    86 00000084 FF15[00000000]                  call [fclose]
    87 0000008A 83C404                          add esp, 4
    88                                      
    89                                          ; exit(0)
    90 0000008D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    91 0000008F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
