     1                                  bits 32 
     2                                  
     3                                  
     4                                  global start        
     5                                  
     6                                  extern exit, fread, printf, fopen, fclose               
     7                                  import exit msvcrt.dll    
     8                                  import fread msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  
    13                                  
    14                                  segment data use32 class=data
    15 00000000 696E70757431362E74-         denumire_fisier db "input16.txt", 0
    15 00000009 787400             
    16 0000000C 7200                        mod_deschidere db "r", 0
    17 0000000E 256400                      format_scriere db "%d", 0
    18 00000011 00000000                    descriptor dd 0
    19 00000015 00<rept>                    text times 100 db 0
    20 00000079 00000000                    produs dd 0
    21 0000007D 00000000                    numar dd 0
    22                                  
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26 00000000 68[0C000000]                    push dword mod_deschidere
    27 00000005 68[00000000]                    push dword denumire_fisier
    28 0000000A FF15[00000000]                  call [fopen]
    29 00000010 83C408                          add esp, 4*2
    30 00000013 A3[11000000]                    mov [descriptor], eax
    31                                          
    32 00000018 83F800                          cmp eax, 0
    33 0000001B 7472                            je final
    34                                          
    35 0000001D BE[15000000]                    mov esi, text
    36                                          bucla:
    37 00000022 FF35[11000000]                      push dword[descriptor]
    38 00000028 6A01                                push dword 1
    39 0000002A 6A01                                push dword 1
    40 0000002C 56                                  push dword esi
    41 0000002D FF15[00000000]                      call [fread]
    42 00000033 83C410                              add esp, 4*4
    43 00000036 83F800                              cmp eax, 0
    44 00000039 7454                                je final
    45                                              
    46 0000003B 803E30                              cmp byte[esi], '0'
    47 0000003E 7225                                jb terminat_numar
    48 00000040 803E39                              cmp byte[esi], '9'
    49 00000043 7720                                ja terminat_numar
    50                                              
    51                                              ;conditii de jump
    52                                              
    53 00000045 A1[7D000000]                        mov eax, [numar]
    54 0000004A BB0A000000                          mov ebx, 10
    55 0000004F F7E3                                mul ebx
    56 00000051 BB00000000                          mov ebx, 0
    57 00000056 8A1E                                mov bl, [esi]
    58 00000058 80EB30                              sub bl, '0'
    59 0000005B 01D8                                add eax, ebx
    60 0000005D A3[7D000000]                        mov [numar], eax
    61                                              
    62 00000062 46                                  inc esi
    63 00000063 EB28                                jmp final_bucla
    64                                              
    65                                              terminat_numar:
    66                                              
    67 00000065 833D[7D000000]08                    cmp dword[numar], 8
    68                                              
    69 0000006C 7310                                jae nu_salva
    70                                              
    71 0000006E A1[79000000]                        mov eax, [produs]
    72 00000073 0305[7D000000]                      add eax, [numar]
    73 00000079 A3[79000000]                        mov [produs], eax
    74                                              
    75                                              nu_salva:
    76 0000007E BE[15000000]                        mov esi, text
    77 00000083 C705[7D000000]0000-                 mov dword[numar], 0
    77 0000008B 0000               
    78                                              
    79                                              final_bucla:
    80 0000008D EB93                                jmp bucla
    81                                          final:
    82                                          
    83 0000008F 81FE[15000000]                  cmp esi, text
    84 00000095 7419                            je mai_jos
    85                                          
    86 00000097 833D[7D000000]08                cmp dword[numar], 8
    87 0000009E 7310                            jae mai_jos
    88                                          
    89 000000A0 A1[79000000]                    mov eax, [produs]
    90 000000A5 0305[7D000000]                  add eax, [numar]
    91 000000AB A3[79000000]                    mov [produs], eax
    92                                          
    93                                          mai_jos:
    94 000000B0 FF35[79000000]                  push dword[produs]
    95 000000B6 68[0E000000]                    push dword format_scriere
    96 000000BB FF15[00000000]                  call [printf]
    97 000000C1 83C408                          add esp, 4*2
    98                                          
    99 000000C4 FF35[11000000]                  push dword [descriptor]
   100 000000CA FF15[00000000]                  call [fclose]
   101 000000D0 83C404                          add esp, 4
   102                                      
   103                                          ; exit(0)
   104 000000D3 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   105 000000D5 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
