     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, fread, printf       
     8                                  import exit msvcrt.dll    
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fread msvcrt.dll
    12                                  import printf msvcrt.dll
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 696E7075742E747874-         denumire_fisier db "input.txt", 0
    16 00000009 00                 
    17 0000000A 7200                        mod_acces db "r", 0
    18 0000000C 00000000                    descriptor_fisier dd 0
    19 00000010 2573202D2025640A00          format_scriere db "%s - %d", 10, 0
    20 00000019 02000000                    cate dd 2
    21 0000001D 01000000                    dimensiune dd 1
    22 00000021 00000000                    cifra dd 0
    23                                  
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27 00000000 68[0A000000]                    push dword mod_acces
    28 00000005 68[00000000]                    push dword denumire_fisier
    29 0000000A FF15[00000000]                  call [fopen]
    30 00000010 83C408                          add esp, 4*2
    31                                          
    32 00000013 A3[0C000000]                    mov [descriptor_fisier], eax
    33 00000018 83F800                          cmp eax, 0
    34 0000001B 7465                            je final
    35                                          
    36                                          bucla:
    37 0000001D FF35[0C000000]                      push dword [descriptor_fisier]
    38 00000023 FF35[19000000]                      push dword [cate]
    39 00000029 FF35[1D000000]                      push dword [dimensiune]
    40 0000002F 68[21000000]                        push dword cifra
    41 00000034 FF15[00000000]                      call [fread]
    42 0000003A 83C410                              add esp, 4*4
    43                                          
    44 0000003D 83F800                              cmp eax, 0
    45 00000040 7440                                je final
    46                                              
    47 00000042 B900000000                          mov ecx,0 ; cati biti de 1
    48 00000047 B800000000                          mov eax, 0
    49 0000004C A0[21000000]                        mov al, [cifra]
    50                                              
    51 00000051 3C41                                cmp al, 'A'
    52 00000053 7202                                jb scadere
    53 00000055 2C07                                sub al, 7h
    54                                              
    55                                              scadere:
    56 00000057 2C30                                sub al, 30h
    57                                              
    58                                              bucla1:
    59 00000059 B302                                mov bl, 2
    60 0000005B F6F3                                div bl
    61 0000005D 00E1                                add cl, ah
    62 0000005F B400                                mov ah, 0
    63 00000061 3C00                                cmp al, 0
    64 00000063 75F4                                jne bucla1
    65                                              
    66 00000065 C605[22000000]00                    mov byte[cifra+1], 0
    67 0000006C 51                                  push dword ecx
    68 0000006D 68[21000000]                        push dword cifra
    69 00000072 68[10000000]                        push dword format_scriere
    70 00000077 FF15[00000000]                      call [printf]
    71 0000007D 83C40C                              add esp, 4*3
    72                                          
    73 00000080 EB9B                                jmp bucla
    74                                              
    75                                          final:
    76 00000082 FF35[0C000000]                  push dword [descriptor_fisier]
    77 00000088 FF15[00000000]                  call [fclose]
    78 0000008E 83C404                          add esp, 4
    79                                          
    80                                        
    81                                          ; exit(0)
    82 00000091 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    83 00000093 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
